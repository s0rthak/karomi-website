{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","karomi-ember/tests/helpers/destroy-app.js","karomi-ember/tests/helpers/module-for-acceptance.js","karomi-ember/tests/helpers/resolver.js","karomi-ember/tests/helpers/start-app.js","karomi-ember/tests/integration/components/about-page-test.js","karomi-ember/tests/integration/components/collection-page-test.js","karomi-ember/tests/integration/components/contact-page-test.js","karomi-ember/tests/integration/components/index-shim-test.js","karomi-ember/tests/integration/components/karomi-footer-test.js","karomi-ember/tests/integration/components/karomi-header-test.js","karomi-ember/tests/integration/components/product-page-test.js","karomi-ember/tests/test-helper.js","karomi-ember/tests/unit/routes/404-test.js","karomi-ember/tests/unit/routes/about-test.js","karomi-ember/tests/unit/routes/application-test.js","karomi-ember/tests/unit/routes/collection/block-printed-bedroom-collection-test.js","karomi-ember/tests/unit/routes/collection/meditation-area-test.js","karomi-ember/tests/unit/routes/contact-test.js","karomi-ember/tests/unit/routes/cross-stitch-frames-test.js","karomi-ember/tests/unit/routes/cushions/couple-cushions-test.js","karomi-ember/tests/unit/routes/cushions/cushion-sets-test.js","karomi-ember/tests/unit/routes/cushions/decor-metallic-cushions-test.js","karomi-ember/tests/unit/routes/cushions/kids-cushions-test.js","karomi-ember/tests/unit/routes/cushions/pair-cushions-test.js","karomi-ember/tests/unit/routes/cushions/theme-cushions-test.js","karomi-ember/tests/unit/routes/index-test.js","karomi-ember/tests/unit/routes/table-kitchen/kitchen-oven-accessories-test.js","karomi-ember/tests/unit/routes/table-kitchen/table-linens-test.js","karomi-ember/tests/unit/routes/table-kitchen/table-napkins-test.js","karomi-ember/tests/unit/routes/table-kitchen/table-placemats-test.js","karomi-ember/tests/unit/routes/table-kitchen/table-runners-test.js","karomi-ember/tests/unit/routes/table-kitchen/table-sets-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('karomi-ember/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('karomi-ember/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'karomi-ember/tests/helpers/start-app', 'karomi-ember/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _karomiEmberTestsHelpersStartApp, _karomiEmberTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _karomiEmberTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _karomiEmberTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('karomi-ember/tests/helpers/resolver', ['exports', 'karomi-ember/resolver', 'karomi-ember/config/environment'], function (exports, _karomiEmberResolver, _karomiEmberConfigEnvironment) {\n\n  var resolver = _karomiEmberResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _karomiEmberConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _karomiEmberConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('karomi-ember/tests/helpers/start-app', ['exports', 'ember', 'karomi-ember/app', 'karomi-ember/config/environment'], function (exports, _ember, _karomiEmberApp, _karomiEmberConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    // use defaults, but you can override\n    var attributes = _ember['default'].assign({}, _karomiEmberConfigEnvironment['default'].APP, attrs);\n\n    _ember['default'].run(function () {\n      application = _karomiEmberApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('karomi-ember/tests/integration/components/about-page-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('about-page', 'Integration | Component | about page', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '53Dt0Yn6',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"about-page\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'L1UnfFz8',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"about-page\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('karomi-ember/tests/integration/components/collection-page-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('collection-page', 'Integration | Component | collection page', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'oBKhVXZD',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"collection-page\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'z7vcucwz',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"collection-page\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('karomi-ember/tests/integration/components/contact-page-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('contact-page', 'Integration | Component | contact page', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'pxtlKs0U',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"contact-page\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'MKYGiz7D',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"contact-page\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('karomi-ember/tests/integration/components/index-shim-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('index-shim', 'Integration | Component | index shim', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '14YNJCsg',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"index-shim\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'AFBScHUG',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"index-shim\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('karomi-ember/tests/integration/components/karomi-footer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('karomi-footer', 'Integration | Component | karomi footer', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'mHsGfjLv',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"karomi-footer\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '7G3sGY2S',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"karomi-footer\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('karomi-ember/tests/integration/components/karomi-header-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('karomi-header', 'Integration | Component | karomi header', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'b75d1PQm',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"karomi-header\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'HWbMtRDL',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"karomi-header\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('karomi-ember/tests/integration/components/product-page-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('product-page', 'Integration | Component | product page', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'gCWfl8/a',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"product-page\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'XRAse7Vl',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"product-page\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('karomi-ember/tests/test-helper', ['exports', 'karomi-ember/tests/helpers/resolver', 'ember-qunit'], function (exports, _karomiEmberTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_karomiEmberTestsHelpersResolver['default']);\n});","define('karomi-ember/tests/unit/routes/404-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:404', 'Unit | Route | 404', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/about-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:about', 'Unit | Route | about', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:application', 'Unit | Route | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/collection/block-printed-bedroom-collection-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:collection/block-printed-bedroom-collection', 'Unit | Route | collection/block printed bedroom collection', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/collection/meditation-area-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:collection/meditation-area', 'Unit | Route | collection/meditation area', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/contact-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:contact', 'Unit | Route | contact', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/cross-stitch-frames-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:cross-stitch-frames', 'Unit | Route | cross stitch frames', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/cushions/couple-cushions-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:cushions/couple-cushions', 'Unit | Route | cushions/couple cushions', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/cushions/cushion-sets-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:cushions/cushion-sets', 'Unit | Route | cushions/cushion sets', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/cushions/decor-metallic-cushions-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:cushions/decor-metallic-cushions', 'Unit | Route | cushions/decor metallic cushions', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/cushions/kids-cushions-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:cushions/kids-cushions', 'Unit | Route | cushions/kids cushions', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/cushions/pair-cushions-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:cushions/pair-cushions', 'Unit | Route | cushions/pair cushions', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/cushions/theme-cushions-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:cushions/theme-cushions', 'Unit | Route | cushions/theme cushions', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:index', 'Unit | Route | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/table-kitchen/kitchen-oven-accessories-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:table-kitchen/kitchen-oven-accessories', 'Unit | Route | table kitchen/kitchen oven accessories', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/table-kitchen/table-linens-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:table-kitchen/table-linens', 'Unit | Route | table kitchen/table linens', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/table-kitchen/table-napkins-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:table-kitchen/table-napkins', 'Unit | Route | table kitchen/table napkins', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/table-kitchen/table-placemats-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:table-kitchen/table-placemats', 'Unit | Route | table kitchen/table placemats', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/table-kitchen/table-runners-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:table-kitchen/table-runners', 'Unit | Route | table kitchen/table runners', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('karomi-ember/tests/unit/routes/table-kitchen/table-sets-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:table-kitchen/table-sets', 'Unit | Route | table kitchen/table sets', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","/* jshint ignore:start */\n\nrequire('karomi-ember/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChfile":"tests.js"}